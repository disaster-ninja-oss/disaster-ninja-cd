apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.envName }}-disaster-ninja-be
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: disaster-ninja-be
    app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-be
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: disaster-ninja-be
      app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-be
      #don't add app.kubernetes.io/version
      app.kubernetes.io/managed-by: "Helm"
      stage: {{ .Values.envName }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: disaster-ninja-be
        app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-be
        app.kubernetes.io/version: {{ .Chart.Version }}
        app.kubernetes.io/managed-by: "Helm"
        stage: {{ .Values.envName }}
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        rollme: {{ randAlphaNum 5 | quote }} #random value that makes Helm restart pods on any upgrade
    spec:
      containers:
      - name: disaster-ninja-be
        image: {{ .Values.image.be.repository }}:{{ .Values.image.be.tag }}
        imagePullPolicy: {{ .Values.image.be.pullPolicy }}
        ports:
          - containerPort: {{ .Values.service.port }}
            name: be-main
        resources:
          requests:
            cpu: "1"
            memory: "4G"
          limits:
            memory: "6G"
        env:
          - name: JAVA_TOOL_OPTIONS
            value: "-XX:MaxRAMPercentage=50"
          - name: NOTIFICATIONS_ENABLED
            value: "false"
        envFrom:
        - configMapRef:
            name: {{ .Values.envName }}-disaster-ninja-be
        - secretRef:
            name: {{ .Values.envName }}-disaster-ninja-be
        readinessProbe:
          httpGet:
            path: /active/api/health/readiness
            port: {{ .Values.service.port }}
          failureThreshold: 1
          periodSeconds: 10
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /active/api/health/readiness
            port: {{ .Values.service.port }}
          failureThreshold: 10
          periodSeconds: 10
          initialDelaySeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.envName }}-disaster-ninja-be-notifier
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: disaster-ninja-be-notifier
    app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-be-notifier
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: disaster-ninja-be-notifier
      app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-be-notifier
      #don't add app.kubernetes.io/version
      app.kubernetes.io/managed-by: "Helm"
      stage: {{ .Values.envName }}
  {{ if eq .Values.notificationsEnabled true }}replicas: 1
  {{ else }}replicas: 0{{ end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: disaster-ninja-be-notifier
        app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-be-notifier
        app.kubernetes.io/version: {{ .Chart.Version }}
        app.kubernetes.io/managed-by: "Helm"
        stage: {{ .Values.envName }}
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        rollme: {{ randAlphaNum 5 | quote }} #random value that makes Helm restart pods on any upgrade
    spec:
      containers:
      - name: disaster-ninja-be-notifier
        image: {{ .Values.image.be.repository }}:{{ .Values.image.be.tag }}
        imagePullPolicy: {{ .Values.image.be.pullPolicy }}
        ports:
          - containerPort: {{ .Values.service.port }}
            name: be-main
        resources:
          requests:
            cpu: "1"
            memory: "2G"
          limits:
            memory: "3G"
        env:
          - name: JAVA_TOOL_OPTIONS
            value: "-XX:MaxRAMPercentage=50"
          - name: NOTIFICATIONS_ENABLED
            value: "true"
        envFrom:
        - configMapRef:
            name: {{ .Values.envName }}-disaster-ninja-be
        - secretRef:
            name: {{ .Values.envName }}-disaster-ninja-be
        readinessProbe:
          httpGet:
            path: /active/api/health/readiness
            port: {{ .Values.service.port }}
          failureThreshold: 1
          periodSeconds: 10
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /active/api/health/readiness
            port: {{ .Values.service.port }}
          failureThreshold: 10
          periodSeconds: 10
          initialDelaySeconds: 5
---
