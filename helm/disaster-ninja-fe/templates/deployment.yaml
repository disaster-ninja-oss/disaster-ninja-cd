apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.envName }}-disaster-ninja-fe
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: disaster-ninja-fe
    app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-fe
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: disaster-ninja-fe
      app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-fe
      #don't add app.kubernetes.io/version
      app.kubernetes.io/managed-by: "Helm"
      stage: {{ .Values.envName }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: disaster-ninja-fe
        app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja-fe
        app.kubernetes.io/managed-by: "Helm"
        stage: {{ .Values.envName }}
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }} #only roll pods if config (rendered!) changed
    spec:
      containers:
        - name: static-server
          #TODO: resources
          imagePullPolicy: IfNotPresent
          image: {{ .Values.image.fe.repository }}{{ .Values.image.fe.algorithm }}:{{ .Values.image.fe.tag }}
          ports:
            - containerPort: 80
              name: fe-main
          volumeMounts:
            - name: config-volume
              mountPath: /usr/src/app/static/config
              readOnly: true
          #TODO livenessProbe for prod
          readinessProbe:
            httpGet:
              path: /active/
              port: 80
            failureThreshold: 1
            periodSeconds: 15
            initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.envName }}-disaster-ninja-fe
            items:
              - key: appconfig-cfgmap-data
                path: "appconfig.json"
---
