{{ if ne .Values.envName "local" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.envName }}-disaster-ninja
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: disaster-ninja
    app.kubernetes.io/instance: {{ .Values.envName }}-disaster-ninja
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    cert-manager.io/cluster-issuer: letsencrypt-production #use letsencrypt-staging for testing
    acme.cert-manager.io/http01-edit-in-place: "true" #required otherwise ACME challenge can't be completed
    nginx.org/server-snippets: |
      location / {
        return 302 /active/;
      }
spec:
  tls:
    - hosts:
        - {{ .Values.dnsName1 }}
      secretName: {{ .Values.envName }}-disaster-ninja-tls
  ingressClassName: nginx
  rules:
    - host: {{ .Values.dnsName1 }}
      http:
        paths:
          - path: /active/
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.envName }}-disaster-ninja-fe
                port:
                  number: 80
          - path: /active/api/
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.envName }}-disaster-ninja-be
                port:
                  number: {{ .Values.backendPort }}
---
{{ end }}