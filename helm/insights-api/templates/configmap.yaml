apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.envName }}-insights-api
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: insights-api
    app.kubernetes.io/instance: {{ .Values.envName }}-insights-api
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
data:
  SPRING_JMX_ENABLED: '{{ .Values.jmxEnabled }}'
  SPRING_PROFILES_ACTIVE: {{ .Values.envName }}
  SPRING_DATASOURCE_URL: 'jdbc:postgresql://{{ .Values.databaseHost }}:{{ .Values.databasePort }}/insights-api'
  SPRING_DATASOURCE_USERNAME: insights-api
  spring.security.oauth2.resourceserver.jwt.issuer-uri: { { .Values.keycloakUrl } }/realms/{{ .Values.keycloakRealm }}
  spring.security.oauth2.resourceserver.jwt.jwk-set-uri: { { .Values.keycloakUrl } }/realms/{{ .Values.keycloakRealm }}/protocol/openid-connect/certs
  #do not use uppercase var names for hikari properties otherwise startup fails with smth like 'The configuration of the pool is sealed once started.'
  spring.datasource.hikari.connection-timeout: '600000'
  spring.datasource.hikari.maximum-pool-size: '20'
  SPRING_JDBC_TEMPLATE_QUERY_TIMEOUT: '600'
  OTEL_TRACES_EXPORTER: {{ .Values.otlpTracesExporter }}
  OTEL_METRICS_EXPORTER: none
  OTEL_LOGS_EXPORTER: none
  spring.redis.host: '{{ .Values.envName }}-insights-api-redis'
  graphql.servlet.tracing-enabled: 'false' #11653
---
#create manually, not managed by Helm as it's a secret
#apiVersion: v1
#kind: Secret
#metadata:
#  name: {{ .Values.envName }}-insights-api
#  namespace: {{ .Release.Namespace }} (effectively {{ .Values.envName }}-insights-api)
#labels:
#  app.kubernetes.io/name: insights-api
#  app.kubernetes.io/instance: {{ .Values.envName }}-insights-api
#  stage: {{ .Values.envName }}
#data:
#  SPRING_DATASOURCE_PASSWORD: base64 encoded password
***REMOVED***
---
#create manually, not managed by Helm as it's a secret
#apiVersion: v1
#kind: Secret
#metadata:
#  name: redis
#  namespace: {{ .Release.Namespace }} (effectively {{ .Values.envName }}-insights-api-redis)
#labels:
#  app.kubernetes.io/name: insights-api-redis
#  app.kubernetes.io/instance: {{ .Values.envName }}-insights-api-redis
#  stage: {{ .Values.envName }}
#data:
***REMOVED***
---