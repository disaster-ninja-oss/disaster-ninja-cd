apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.envName }}-layers-api
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: layers-api
    app.kubernetes.io/instance: {{ .Values.envName }}-layers-api
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: layers-api
      app.kubernetes.io/instance: {{ .Values.envName }}-layers-api
      app.kubernetes.io/managed-by: "Helm"
      stage: {{ .Values.envName }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: layers-api
        app.kubernetes.io/instance: {{ .Values.envName }}-layers-api
        app.kubernetes.io/managed-by: "Helm"
        stage: {{ .Values.envName }}
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        #only roll pods if config (rendered!) changed
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: layers-api
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.port }}
              name: main
          resources:
            requests:
              cpu: "1"
              memory: "4Gi"
            limits:
              memory: "4Gi"
          envFrom:
            - configMapRef:
                name: {{ .Values.envName }}-layers-api
            - secretRef:
                name: {{ .Values.envName }}-layers-api
          readinessProbe:
            httpGet:
              path: /layers/v2/health/readiness
              port: {{ .Values.port }}
            failureThreshold: 1
            periodSeconds: 10
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /layers/v2/health/readiness
              port: {{ .Values.port }}
            failureThreshold: 10
            periodSeconds: 10
            initialDelaySeconds: 5