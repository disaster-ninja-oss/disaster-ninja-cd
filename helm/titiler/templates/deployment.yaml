apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.envName }}-titiler
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: titiler
    app.kubernetes.io/instance: {{ .Values.envName }}-titiler
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: backend
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      #don't add app.kubernetes.io/version
      app.kubernetes.io/name: titiler
      app.kubernetes.io/instance: {{ .Values.envName }}-titiler
      app.kubernetes.io/component: backend
      stage: {{ .Values.envName }}
  replicas: {{ .Values.replicaCount }}
  #TODO affinity/antiAffinity?
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: titiler
        app.kubernetes.io/instance: {{ .Values.envName }}-titiler
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: backend
        stage: {{ .Values.envName }}
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    spec:
      containers:
        - name: titiler
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.env.PORT }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            failureThreshold: 1
            periodSeconds: 10
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            failureThreshold: 10
            periodSeconds: 10
            initialDelaySeconds: 5
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 1
              memory: 2Gi
